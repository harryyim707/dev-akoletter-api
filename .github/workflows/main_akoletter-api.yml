# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy JAR app to Azure Web App - akoletter-api

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Java version
        uses: actions/setup-java@v1
        with:
          java-version: '17'
      - name: Generate Environment Variables File for Production
        run: |
          echo "AKOLETTER_DB_PW=$AKOLETTER_DB_PW">>.env
          echo "AKOLETTER_DB_URL=$AKOLETTER_DB_URL">>.env
          echo "AZURE_MYSQL_CONNECTIONSTRING=$AZURE_MYSQL_CONNECTIONSTRING">>.env
          echo "AZURE_REDIS_CONNECTIONSTRING=$AZURE_REDIS_CONNECTIONSTRING">>.env
          echo "CLOVA_API_URL=$CLOVA_API_URL">>.env
          echo "CLOVA_CLIENT_ID=$CLOVA_CLIENT_ID">>.env
          echo "CLOVA_CLIENT_SECRET=$CLOVA_CLIENT_SECRET">>.env
          echo "CUSTOMCONNSTR_CLOVA_API_URL=$CUSTOMCONNSTR_CLOVA_API_URL">>.env
          echo "CUSTOMCONNSTR_CLOVA_CLIENT_ID=$CUSTOMCONNSTR_CLOVA_CLIENT_ID">>.env
          echo "CUSTOMCONNSTR_CLOVA_CLIENT_SECRET=$CUSTOMCONNSTR_CLOVA_CLIENT_SECRET">>.env
          echo "CUSTOMCONNSTR_DEFAULTIMAGEID=$CUSTOMCONNSTR_DEFAULTIMAGEID">>.env
          echo "CUSTOMCONNSTR_JWT_SECRET_KEY=$CUSTOMCONNSTR_JWT_SECRET_KEY">>.env
          echo "CUSTOMCONNSTR_PORT=$CUSTOMCONNSTR_PORT">>.env
          echo "DB_PW=$DB_PW">>.env
          echo "DB_USERNAME=$DB_USERNAME">>.env
          echo "DEFAULTIMAGEID=$DEFAULTIMAGEID">>.env
          echo "JWT_SECRET_KEY=$JWT_SECRET_KEY">>.env
          echo "LOCAL_REDIS_HOST=$LOCAL_REDIS_HOST">>.env
          echo "LOCAL_REDIS_PORT=$LOCAL_REDIS_PORT">>.env
          echo "MYSQL_PASSWORD=$MYSQL_PASSWORD">>.env
          echo "PORT=$PORT">>.env
        env:
          AKOLETTER_DB_PW: ${{ secrets.AKOLETTER_DB_PW }}
          AKOLETTER_DB_URL: ${{ secrets.AKOLETTER_DB_URL }}
          AZURE_MYSQL_CONNECTIONSTRING: ${{ secrets.AZURE_MYSQL_CONNECTIONSTRING }}
          AZURE_REDIS_CONNECTIONSTRING: ${{ secrets.AZURE_REDIS_CONNECTIONSTRING }}
          CLOVA_API_URL: ${{ secrets.CLOVA_API_URL }}
          CLOVA_CLIENT_ID: ${{ secrets.CLOVA_CLIENT_ID }}
          CLOVA_CLIENT_SECRET: ${{ secrets.CLOVA_CLIENT_SECRET }}
          CUSTOMCONNSTR_CLOVA_API_URL: ${{ secrets.CUSTOMCONNSTR_CLOVA_API_URL }}
          CUSTOMCONNSTR_CLOVA_CLIENT_ID: ${{ secrets.CUSTOMCONNSTR_CLOVA_CLIENT_ID }}
          CUSTOMCONNSTR_CLOVA_CLIENT_SECRET: ${{ secrets.CUSTOMCONNSTR_CLOVA_CLIENT_SECRET }}
          CUSTOMCONNSTR_DEFAULTIMAGEID: ${{ secrets.CUSTOMCONNSTR_DEFAULTIMAGEID }}
          CUSTOMCONNSTR_JWT_SECRET_KEY: ${{ secrets.CUSTOMCONNSTR_JWT_SECRET_KEY }}
          CUSTOMCONNSTR_PORT: ${{ secrets.CUSTOMCONNSTR_PORT }}
          DB_PW: ${{ secrets.DB_PW }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DEFAULTIMAGEID: ${{ secrets.DEFAULTIMAGEID }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          LOCAL_REDIS_HOST: ${{ secrets.LOCAL_REDIS_HOST }}
          LOCAL_REDIS_PORT: ${{ secrets.LOCAL_REDIS_PORT }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          PORT: ${{ secrets.PORT }}

      - name: Setup MySQL
        uses: samin/mysql-action@v1
        with:
          character set server: 'utf8'
          mysql database: 'akoletter'
          mysql user: 'evpxhqmzme'
          mysql password: ${{ secrets.MYSQL_PASSWORD }} # github Secret 탭에서 설정하세요!

      - name: Start Redis
        uses: supercharge/redis-github-action@1.5.0
        with:
          redis-version: 6

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: java-app
          path: '${{ github.workspace }}/target/*.jar'

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: java-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'akoletter-api'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_C781E18CCF794EDDA69F464A2399DD08 }}
          package: '*.jar'
